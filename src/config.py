# src/config.py
"""
Central configuration file for the Bostadsv√§rdering project.

This file holds all static parameters, file paths, and model settings
to make the code easier to manage and modify.
"""

import pandas as pd
from pathlib import Path

# --- Project Structure ---
# Define the root directory of the project to construct absolute paths
ROOT_DIR = Path(__file__).parent.parent
# Define key directories within the project
DATA_DIR = ROOT_DIR / "data"
MODELS_DIR = ROOT_DIR / "models"
RAW_DATA_DIR = DATA_DIR / "raw"
PROCESSED_DATA_DIR = DATA_DIR / "processed"


# --- Data File Paths ---
# Path to the raw CSV file generated by the scraper
RAW_DATA_PATH = RAW_DATA_DIR / "hemnet_sold_villas_final.csv"
# Path to the cleaned CSV file used for training
PROCESSED_DATA_PATH = PROCESSED_DATA_DIR / "hemnet_sold_villas_processed.csv"


# --- Scraper Configuration ---
HEMNET_BASE_URL = "https://www.hemnet.se/salda/bostader?item_types%5B%5D=villa&location_ids%5B%5D=946677"
# Set a high page limit. The script will stop automatically when it finds old data.
SCRAPER_MAX_PAGES = 500


# --- Model Training Configuration ---
# The target variable for prediction
TARGET_VARIABLE = 'final_price'

# The quantiles to be predicted by the models and their corresponding names.
# The names are used as keys in the app and for model filenames.
QUANTILES_AND_NAMES = {
    'lower': 0.05,
    'median': 0.50,
    'upper': 0.95,
}

# The epoch date for calculating 'days_since_epoch' feature. Must be consistent.
FEATURE_ENGINEERING_EPOCH = pd.Timestamp("2000-01-01")

# List of base features before one-hot encoding or other transformations.
# This list is used in the training script to select initial columns.
BASE_FEATURES = [
    'living_area_m2',
    'rooms',
    'plot_area_m2',
    'non_living_area_m2',
    'location_area',
    'total_area_m2',
    'plot_to_living_ratio',
    'sale_days_since_epoch',
    'log_living_area',
    'log_plot_area',
]


# --- Model Artifacts Configuration ---
# Filenames for the artifacts saved in the MODELS_DIR
MODEL_FILE_PREFIX = "xgb_model"
MODEL_COLUMNS_FILE = "model_columns.joblib"
LOCATION_OPTIONS_FILE = "location_area_columns.json"
LOCATION_PRICE_MAP_FILE = "location_price_map.json"

# --- Full paths to model artifacts ---
# These are constructed from the directories and filenames defined above.
MODEL_COLUMNS_PATH = MODELS_DIR / MODEL_COLUMNS_FILE
LOCATION_OPTIONS_PATH = MODELS_DIR / LOCATION_OPTIONS_FILE
LOCATION_PRICE_MAP_PATH = MODELS_DIR / LOCATION_PRICE_MAP_FILE

# Generate the full paths for each quantile model file dynamically.
# This makes it easy to add/remove quantiles by just changing QUANTILES_AND_NAMES.
MODEL_PATHS = {
    name: MODELS_DIR / f"{MODEL_FILE_PREFIX}_q{int(q * 100)}.joblib"
    for name, q in QUANTILES_AND_NAMES.items()
}
# .github/workflows/weekly-retrain.yml
name: MLOps - Weekly Scrape and Retrain

on:
  schedule:
    - cron: '0 3 * * 0' # Runs every Sunday at 3:00 AM UTC
  workflow_dispatch:

env:
  AZURE_RESOURCE_GROUP: MyRealEstateProject-RG # Your Resource Group Name
  AZURE_CONTAINER_APP_NAME: real-estate-streamlit-app # The name of your container app

jobs:
  scrape-clean-train:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install system dependencies for Selenium
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Scraper
        env:
          AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
        run: python src/scrape.py

      - name: Run Data Cleaning
        env:
          AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
        run: python src/clean.py

      - name: Run Model Training
        env:
          AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
        run: python src/train.py

      - name: 'Login to Azure'
        if: success()
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Restart Azure Container App to load new model'
        if: success()
        uses: azure/CLI@v1
        with:
          inlineScript: |
            echo "Finding the latest active revision for container app ${{ env.AZURE_CONTAINER_APP_NAME }}..."
            
            # 1. Get the name of the latest active revision
            LATEST_REVISION_NAME=$(az containerapp revision list \
              --name ${{ env.AZURE_CONTAINER_APP_NAME }} \
              --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
              --query "[?properties.active==\`true\`].name" \
              -o tsv)

            # 2. Check if a revision name was found
            if [ -z "$LATEST_REVISION_NAME" ]; then
              echo "Error: Could not find an active revision for the container app."
              exit 1
            fi

            echo "Found active revision: $LATEST_REVISION_NAME. Restarting it now..."
            
            # 3. Restart that specific revision by name
            az containerapp revision restart \
              --name ${{ env.AZURE_CONTAINER_APP_NAME }} \
              --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
              --revision "$LATEST_REVISION_NAME"

      - name: Logout from Azure
        if: always()
        run: az logout